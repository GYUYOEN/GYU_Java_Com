DROP TABLE EMP_BOARDS CASCADE CONSTRAINTS;
DROP SEQUENCE EMP_BOARDS_SEQ;

CREATE TABLE EMP_BOARDS (
	   ID NUMBER NOT NULL
	 , TITLE VARCHAR2(100) NOT NULL
	 , CONTENT VARCHAR2(2000)
	 , EMPID NUMBER NOT NULL
	 , CREATEDATE DATE DEFAULT(SYSDATE)
	 , VIEW_CNT NUMBER DEFAULT(0)
	 , "LIKE" NUMBER DEFAULT(0)
	 , CONSTRAINT EMP_BOARDS_ID_PK PRIMARY KEY (ID)
	 , CONSTRAINT EMP_BOARDS_EMP_ID_FK FOREIGN KEY(EMPID) REFERENCES EMPLOYEES(EMPLOYEE_ID)
);

CREATE SEQUENCE EMP_BOARDS_SEQ NOCACHE;

/* 기존 테이블의 데이터를 유지하고 싶으면 이 구문을 실행해서 수정하세요.
ALTER TABLE EMP_BOARDS ADD VIEW_CNT NUMBER DEFAULT(0);
ALTER TABLE EMP_BOARDS ADD "LIKE" NUMBER DEFAULT(0);
*/
INSERT INTO EMP_BOARDS VALUES(EMP_BARDOS_SEQ.NEXTVAL, '테스트 제목', '테스트 내용', 100, SYSDATE);


DROP TABLE EMP_BOARDS_STATISTICS;
DROP SEQUENCE EMP_BOARDS_STATISTICS_SEQ;

-- 본사람을 조회
CREATE TABLE EMP_BOARDS_STATISTICS (
	   ID NUMBER PRIMARY KEY
	 , EMPID NUMBER -- 해당 사원이
	 , BID NUMBER --해당 게시글을
	 , ISVIEW VARCHAR2(1) CHECK(ISVIEW IN('Y', 'N'))
	 , LATEST_DATE1 DATE -- 언제 조회 했는지
	 , ISLIKE VARCHAR2(1) CHECK(ISLIKE IN('Y', 'N'))
	 , LATEST_DATE2 DATE -- 언제 좋아요를 눌렀는지
	 , CONSTRAINT EMP_BOARDS_STATISTICS_EMPID_FK FOREIGN KEY(EMPID) REFERENCES EMPLOYEES(EMPLOYEE_ID)
	 , CONSTRAINT EMP_BOARDS_STATISTICS_BID_FK FOREIGN KEY(BID) REFERENCES EMP_BOARDS(ID)
);

CREATE SEQUENCE EMP_BOARDS_STATISTICS_SEQ NOCACHE;

/*
 * EMP_BOARDS_STATISTICS 테이블의 데이터 조회 쿼리
 */
SELECT ID, EMPID, BID
     , ISVIEW AS "view"
     , LATEST_DATE1 AS latestView
     , ISLIKE AS "like"
     , LATEST_DATE2 AS latestLike
  FROM EMP_BOARDS_STATISTICS
 WHERE EMPID = #{empId}
   AND BID = #{id};

/*
 * EMP_BOARDS_STATISTICS 테이블의 초기 데이터 셍성 쿼리
 */
INSERT INTO EMP_BOARDS_STATISTICS
     VALUES(EMP_BOARDS_STATISTICS_SEQ.NEXTVAL
		  , 1, 100, 'Y', SYSDATE, 'N', NULL);

/*
 * 조회한 게시물의 최근 조회 시간 업데이트 쿼리
 */
UPDATE EMP_BOARDS_STATISTICS
   SET LATEST_DATE1 = SYSDATE
 WHERE EMPID = 100
   AND BID = 1;